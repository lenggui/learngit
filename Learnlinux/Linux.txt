Linux 严格区分大小写

Linux 所有内容以文件形式保存，包括硬件，一切皆文件

Linux 可以不需要文件扩展名，不区分扩展名，靠权限来区分文件

LInux命令：
1：命令提示符
   root                              当前用户
   localhost                      主机名
   ~                                 当前所在目录（家目录）
   #                                  超级用户提示符 
   $                                  普通用户提示符
2：命令格式
命令 [选项] [参数] >ping -t 172.38.27.220 
选项： -a              显示所有文件，包含隐藏文件
           -l               显示详细信息
           -d              查看目录属性
           -h              人性化显示文件大小
           -i               显示inode

在 -l 的详细信息中：
-rw-r--r--   权限格式共十位
第一位为  - 表示文件类型
               d 表示目录
               l  表示软连接文件
其他九位每三位为为一组
rw-  u所有者    r--   g所属组  r-- o其他人   通过这样来分配权限，三位中的r表示读w表示写x表示执行


目录处理命令：
建立目录    mkdir -p 目录名 
                 -p  递归创建---创立多个目录
切换目录     cd 目录
   简化操作  cd ~  进入当前用户的家目录
                  cd -   进入上次目录
                  cd ..   进入上级目录
                  cd .    进入当前目录
tab键可以目录补全和命令补全

创建文件：touch [目录/文件]

删除目录
rmdir [目录名]    只能删除空目录
rm -rf [目录名]   删除目录以及目录下的其他目录和文件
选项 -r 表示删除目录  -f 表示强制

复制命令
cp [选项] [原文件或目录] [目标目录]
选项 -r            复制目录
        -p           连带文件属性复制
        -d           若原文件是链接文件，则复制连接属性
        -a           相当于 -pdr 三一起

剪切或改名命令
mv [原文件或目录] [目标目录]
原文件和目标目录在同一目录就是改名，不在就是剪切

date 系统时间
ls -l  等于 ll

pwd  显示当前目录地址

区分相对目录和绝对目录

Liunx目录
/ 根目录
/bin /sbin 在根目录以及根目录下的/usr目录里，不管在/usr还是根目录下，/bin，/sbin都是用来保存系统命令的，但是/sbin只有超级用户root能执行，bin所有用户都可以
/boot 系统启动
/etc 系统默认配置文件保存目录
/home 普通用户的家目录
/root 超级用户的家目录
/lib 函数库
/media /mnt /misc 空目录，可以作为外接储存空间
/proc /sys 不能直接操作，这两个目录保存的是内存的过载点，
/tmp 临时目录
/usr
/var 保存系统可变文档
我们使用是家目录和/tmp目录

链接命令
ln -s [原文件] [目标文件]
选项  -s     soft表示创建软连接不加 -s表示创建硬链接hard
     硬链接特征：拥有相同的 i 节点和储存block块，可以看作是同一个文件；可以通过 i 节点识别；不能跨分区；不能针对目录使用，只用于文件。
    软连接特征：类似windows快捷方式；软链接拥有自己的 i 节点和Block块，但数据块中只保存原文件的文件名和 i 节点号，并没有实际的文件数据；lrwxrwxrwx 软连接文件权限都为这样；修改任意文件，另一个都改变；删除原文件，软连接不能使用。原文件一定要写绝对路径  


echo [内容] >> [绝对路径]        在文件内写入内容
    选项    -e    使识别特殊符号
echo -e "\e[1;33m hello,world \e[0m"  加颜色
  
cat [绝对路径]        获取文件内的内容

文件搜索命令：
locate [文件名]    在/var/lib/mlocate 搜索，只能按文件名搜索，遵行/etc/updatedb.conf配置文件的筛选限制
   PRUNE_BIND_MOUNTS = "yes"
   开启搜索限制
   PRUNEFS =
   搜索时，不搜索文件的文件系统
   PRUNENAMES =
   搜索时，不搜索的文件类型
   PRUNEPATHS =
   搜索时，不搜索的路径 
whereis与which 
whereis  选项 命令名    搜索命令的命令
        -b  只看位置
        -s   查找帮助文档位置
which 命令名    查看位置的同时还会查看其别名
注：他们查找的是外部安装的，内置的查不到，命令环境有其PATH环境，外装命令需要放到PATH下
find [搜索范围] [搜索条件]      搜索条件需要准确存在，不然搜索不到，如果想模糊搜索需要用到通配符（*匹配任意字符  ？匹配任意一个字符  []匹配任意一个中括号内的字符例：*[ab]匹配任意以a或b结尾文件）
find [目录] -inname [文件名]    不区分大小写
find [目录] -user [用户名]        按照所有者搜索
find [目录] -nouser [文件名]    查找没有所有者的文件(一般都是垃圾文件，系统文件以及u盘移动磁盘的外界文件)
find [目录] -mtime +[时间]     查找多少天前修改的文件
find [目录] -mtime -[时间]     查找多少天内修改的文件
     选项    -atime   文件访问时间
                -ctime   改变文件属性
                -mtime  改变文件内容
find . -size [文件大小] 查找文件大小是多少的文件
+ 大于  默认等于 - 小于   注意小写k大写不加单位为默认扇区一个扇区512k  
find . -inum [i节点]  查找此i节点的文件
find [目录] -size +[文件大小] [选项] -size -[文件大小]
查找两个满足条件文件
          选项   
                      -a   and逻辑与，两个条件都满足
                      -o   or 逻辑或，两个条件满足一个
find [目录] -size +[文件大小] [选项] -size -[文件大小]
-exec ls -lh {}  \;
查找目录下满足条件的文件，并显示详细信息
注： -exec [命令] {} \;   固定模式，对搜索结果执行操作
find [命令一] -exec [命令二] {} \;   
grep [选项] [字符串] [文件名]
     选项
             -i   忽略大小写
             -v  排除指定字符串
grep与find区别：
find 搜索符合条件的文件名，
grep 在文件当中搜索符合条件的字符串


帮助命令：
man [命令]   #自己本机不支持
man -k [命令]   与命令相关的所有帮助信息
man -f [命令]    相当于whereis
man命令有1-8个等级 man [-等级] [命令]
apropos [命令]
[命令]  --help  
help [命令]   help只能获取shell内部命令
info [命令]   info进入的是详细的帮助文档
      回车：进入子帮助页面
       u   ：进入上层页面
       n  ：进入下一个帮助小节
       p  ：进入上一个帮助小节
       q  ：退出


压缩与解压缩命令：.zip  .rar .bz2 .tar.gz  .tar.bz2  格式
.zip 格式压缩
zip [压缩文件名] [源文件]         #本机不支持
zip -r [目录]    压缩目录
unzip [压缩文件]     解压文件

.gz  格式压缩
gzip [源文件] 压缩为.gz格式的压缩文件，原文件会消失
gzip -c [源文件] > [压缩文件]  压缩为.gz格式，源文件保留，重点在  > 
gzip -r [目录]  压缩目录下所有的子文件，但不能压缩目录
gzip -d [压缩文件]     解压文件
gunzip [压缩文件]      解压文件
gzip -r [目录]          解压目录

.bz2 格式压缩
bzip2 [源文件]       压缩为.bz2不保留原文件
bzip2 -k [源文件]    压缩之后保留源文件
bzip2 不能压缩目录
bzip2 -d [压缩文件名]    解压缩文件

打包命令tar，用tar把目录打包，再进行压缩命令
tar -cvf [打包文件名] [源文件]
     选项     
                 -c   打包
                 -v    显示过程
                 -f     指定打包后的文件名
tar -xvf [打包文件名]      解打包命令
  选项
            -x   解打包
这种先打包再压缩的方式太麻烦了
.tar.gz 压缩格式  直接打包压缩
tar -zcvf [压缩包名.tar.gz] [源文件]   打包并压缩
      选项
               -z      压缩为.tar.gz格式
tar -zxvf [压缩包名.tar.gz]     解压缩文件

.tar.bz2 压缩格式
tar -jcvf [压缩打包名.tar.bz2] [源文件]    打包并压缩
     选项
             -j     压缩为.tar.bz2格式
tar -jxvf [压缩包名.tar.bz2]    解压缩文件
 注： 这两种压缩方式都可以通过在后面加  -C [绝对路径]来实现压缩到指定目录； 也可以把两个目录打包并压缩例：tar -zcvf [压缩目录.tar.gz]  [目录1]  [目录2] 再目录1和目录2前面都是2空格，同时在[压缩目录.tar.gz]前面加绝对目录就可以指定压缩的目录，与只打包压缩一个文件的指定目录方法不同。[选项] -ztvf 可以查看压缩包，命令形式 tar -ztvf [压缩包名.tar.gz]

关机和重启命令：
shutdown命令
shutdown [选项] [时间] &
   选项
             -c   取消前一个关机命令
             -h    关机
             -r    重启
runlevel    查看系统级别，有0-6七个级别用init调用
推出登入命令 logout

挂载命令（分配盘符）
mount      查询系统中已经挂载的设备
mount -a     依据配置文件/etc/fstab的内容，自动挂载
mount [-t文件系统] [-o特殊选项] 设备文件名 挂载点
   选项
        -t  文件系统：加入文件系统类型行来指定挂载的类型，可以是ext3 ext4 iso9660（光盘）等文件系统
       -o 特殊选项：可以指定挂载的额外选项，谨慎使用

挂载光盘：
mkdir/mnt/cdrom/       建立挂载点
mount -t iso9660 /dev/cdrom/mnt/cdrom/  挂载光盘
光盘目录/dev/sr0（/dev/cdrom）
umount 挂载点或设备文件

挂载U盘：
fdisk -l    查看U盘设备文件名
mount -t vfat /dev/sdb1（先查）/mnt/usb/  挂载（注：LINUX默认不支持NTFS文件系统）


查看用户登入信息
w 用户名也可以直接w
命令输出：
   USER:登入的用户名
   TTY:登入终端
   FROM：从哪个IP地址登入
   LOGIN@：登入时间
   IDLE：用户闲置时间
   JCPU：进程占用时间
   PCPU：是指当前进程所占用的时间
   WHAT：当前正在运行的命令
who  用户名也可不写直接who
命令输出
        用户名    登入终端   登入时间
last    last命令默认是读取/var/log/wtmp文件数据
命令输出
   用户名  登入终端  登入IP  登录时间  退出时间
lastlog    默认读取/var/log/lastlog文件内容
输出命令
 用户名  登入终端 登入IP 最后登入时间



shell  -->  bash
vi  /etc/shells   查看兼容

bash基本功能
别名：
alias  查看已有别名
设定别名  alias 别名=‘原名命令’零时生效，关机还原
vi ~/.bashrc   写入环境变量配置文件，使别名永久生效
unalias  删除别名，零时的，删除配置文件才永久删除
注：别名的优先级高于原始命名
快捷键：
CTRL + l   清屏
CTRL + a  光标移行首
CTRL + e  光标移行尾
CTRL + u 删除光标前的字符
CTRL + z  把命令放入后台
CTRL + r  在历史命令中搜索

历史命令：
history [选项] [历史命令保存文件]   可以是输入history
    选项
        -c 清空历史命令
        -w 把缓存中的历史命令写入历史命令保存文件                               ~/.absh_history
用 ！字符  来调用历史命令
常用tab键   补全命令和目录，判断输入对错

输出重定向：
把输出由显示器转到文件
命令 > 储存文件.log    把命令结果保存在文件里覆盖，而>> 是追加；2>> 报错信息，不加空格  
正确错误都写入文件   命令 >> file.log 2>&1      或者命令 &>>文件；命令 >>file1.log  2>>file2.log 分开存储
/dev/null   相当于垃圾站
输入重定向：
wc [选项] [文件名]      ctrl + d 退出
     选项
              -c    统计字节数
              -w   统计单词数
              -l     统计行数

多命令顺序执行：
命令1：命令2  命令1 2 都执行，  
命令1&&命令2   1正确2才执行，逻辑与
命令1||命令2   1正确1执行，1错误2执行，逻辑或
&& || 可组合使用
管道符
命令1 | 命令2   命令1的结果作为命令2的操作对象
例    ls -l /etc | more   more分页读

通配符：
？匹配任意一个字符
*匹配0个或多个任意字符也就匹配任意内容
[]匹配括号中的任意字符
[-] 匹配括号中的任意一个字符 - 代表一个范围 例：[0-9]
[^] 逻辑非，匹配不是括号内的一个字符，例：[^0-9]
